{"version":3,"sources":["page/rgl/navLeft/index.tsx","page/rgl/funcTool.js","page/rgl/editor/index.tsx","page/rgl/context.js","page/rgl/component/mycontainer/index.js","page/rgl/editor/config.js","page/rgl/component/mytest/index.js","page/rgl/component/mytest2/index.js","page/rgl/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavLeft","state","comlist","value","type","icon","height","document","body","clientHeight","className","this","map","item","i","key","onClick","props","Component","getNewLayout5","data","newd","id","editorData","layout","temp","getNewLayout4","isChecked","static","findTypeFromId","forEach","findOpenContainerId","switch","clone","target","WeakMap","isArray","Array","cloneTarget","get","set","keys","undefined","Object","showTips","content","time","windowWidth","clientWidth","container","createElement","setAttribute","innerHTML","querySelector","appendChild","node","style","top","left","position","padding","background","boxShadow","margin","fontSize","color","borderRadius","textAlign","pointerEvents","display","setTimeout","removeChild","EditorTab","containerId","itemEditor","index","checked","text","onChange","e","val","Fn","field","setState","saveEditorData","placeholder","src","alignItems","width","marginRight","alt","isContainerState","setOpenContainerId","storeData","title","deleteItem","configData","nextProps","preState","MyContext","React","createContext","ReactGridLayout","WidthProvider","GridLayout","MyContainer","click","click_type","clickCesium","changeDialogVisible","border","compactType","preventCollision","onLayoutChange","rowHeight","cols","children","editorConfig","MyTest","testFn","console","log","test","a","filter","Math","random","nextState","prevProps","prevState","snapshot","context","JSON","stringify","theme","contextType","MyTest2","allComponent","test2","InitX","InitY","RGL","editor","isContainer","openContainerId","containerType","editorVisible","navVisible","needEditInit","axios","url","method","baseURL","timeout","then","response","styleData","parse","catch","displayInit","res","item2","String","x","y","w","h","length","item3","setData","componentClick","component","stopPropagation","getComponent","theType","hasOwnProperty","data-grid","changeLayout","newval","push","flag","saveData","bool","obj","code","splice","index2","editorValue","newdata","newLayout","isShowNav","isShowEditor","isDisplay","Provider","CSSTransition","in","classNames","unmountOnExit","appear","zIndex","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.772eb164.chunk.js","sourcesContent":["import React, { Component,  ReactNode } from 'react'\r\nimport {ComlistOne} from '../type'\r\nimport './index.scss'\r\ntype Props = {\r\n  onClick(type:ComlistOne): void\r\n  children?: ReactNode\r\n}\r\n \r\ntype State = {\r\n  comlist: ComlistOne[]\r\n}\r\nexport default class NavLeft extends Component<Props, State> {\r\n  state = {\r\n    comlist: [\r\n      { value: '容器', type: 'container', icon: 'iconziyuan11' },\r\n      { value: 'test', type: 'test', icon: 'iconziyuan11' },\r\n      { value: 'test2', type: 'test2', icon: 'iconziyuan11' },\r\n    ]\r\n  }\r\n  height: number = document.body.clientHeight\r\n  render() {\r\n    return <div className=\"nl\">\r\n        <div className=\"nl-title\">\r\n          组件栏\r\n        </div>\r\n        <ul className='nl-content'>\r\n            {this.state.comlist.map((item,i)=>{\r\n                return(\r\n                    <li className=\"nl-li\" key={i} onClick={()=>{\r\n                        this.props.onClick(item)\r\n                    }}>\r\n                        {item.value}\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    </div>\r\n  }\r\n}\r\n","const throttle = function (fn, delay) {\r\n    var timer = null;\r\n    return function () {\r\n        var args = arguments; //参数集合\r\n        clearTimeout(timer);\r\n        timer = setTimeout(function () {\r\n            fn.apply(this, args);\r\n        }, delay);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n   * 获取新的layout\r\n   */\r\n  const getNewLayout5 = (data, key,newd)=>{\r\n    return data.map(item=>{\r\n        if(item.id ===key){\r\n              return {...item, editorData: newd}\r\n        }else if(item.id !==key && item.layout){\r\n            let temp = getNewLayout5(item.layout, key,newd)\r\n            return {...item, layout: temp}\r\n        }else {\r\n            return item\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n   * 获取新的layout\r\n   */\r\n  const getNewLayout4 = (data, key,isChecked)=>{\r\n    return data.map(item=>{\r\n        if(item.id ===key){\r\n            if (isChecked) {\r\n                return {...item, static: true}\r\n            } else {\r\n                return {...item, static: false}\r\n            }\r\n        }else if(item.id !==key && item.layout){\r\n            let temp = getNewLayout4(item.layout, key,isChecked)\r\n            return {...item, layout: temp}\r\n        }else {\r\n            return item\r\n        }\r\n    })\r\n}\r\n/**\r\n   * 通过id找到id对应的组件type\r\n   */\r\nconst findTypeFromId = (data,id,type)=>{\r\n     \r\n    data.forEach(item=>{\r\n      if(item.id===id){\r\n        type = item.type\r\n      }\r\n      if(item.id!==id && item.layout){\r\n        type = findTypeFromId(item.layout, id, type)\r\n      }\r\n    })\r\n    return type\r\n}\r\n\r\n/**\r\n * 找到当前容器状态为开启的容器的id\r\n * @param {*} data \r\n */\r\nconst findOpenContainerId = (data)=>{\r\n    let id \r\n    data.forEach(item=>{\r\n      if(item.type===\"container\"){\r\n          let editorData = item.editorData || {}\r\n          if(editorData.switch) id=item.id\r\n      }\r\n    })\r\n    return id\r\n}\r\n/**\r\n * 深拷贝\r\n * @param {*} target \r\n * @param {*} map \r\n */\r\nconst clone = (target, map = new WeakMap()) => {\r\n    if (typeof target === 'object') {\r\n      const isArray = Array.isArray(target)\r\n      let cloneTarget = isArray ? [] : {}\r\n      if (map.get(target)) {\r\n        return map.get(target)\r\n      }\r\n      map.set(target, cloneTarget)\r\n      const keys = isArray ? undefined : Object.keys(target)\r\n  \r\n      ;(keys || target).forEach((value, key) => {\r\n        if (keys) key = value\r\n        cloneTarget[key] = clone(target[key], map)\r\n      })\r\n      return cloneTarget\r\n    }\r\n    return target\r\n  }\r\n/**\r\n * 轻提示 showTips(\"请输入手机号和验证码\", 200, 2)\r\n * @param {*} content \r\n * @param {*} height \r\n * @param {*} time \r\n */\r\n  const showTips=(content, height, time) =>{\r\n      \r\n    //窗口的宽度  \r\n    const windowWidth = document.body.clientWidth\r\n    const container = document.createElement('div');\r\n    container.setAttribute('class', 'tipsClass');\r\n    container.innerHTML = content\r\n    const body  =document.querySelector(\"body\")\r\n\r\n    body.appendChild(container);\r\n    const node  =document.querySelector('div.tipsClass')\r\n     \r\n    node.style.top = height + 'px'\r\n    node.style.left = (windowWidth / 2) - 350 / 2 + 'px'\r\n    node.style.position = 'absolute'\r\n    node.style.padding = '10px 16px'\r\n    node.style.background ='#fff'\r\n    node.style.boxShadow ='0 4px 12px rgba(0, 0, 0, 0.15)'\r\n    node.style.margin = '0 auto'\r\n    node.style.fontSize = '12px'\r\n    node.style.height = 'auto'\r\n    node.style.color = 'rgba(0, 0, 0, 0.65)'\r\n    node.style.borderRadius = '5px'\r\n    node.style.textAlign = 'center'\r\n    node.style.pointerEvents = 'all'\r\n    node.setAttribute('class', 'component-message-wrap-fadein');\r\n    node.style.display = 'inline-block'\r\n\tsetTimeout(function () { \r\n\t\tnode.setAttribute('class', 'component-message-wrap-fadeout');\r\n\t\tsetTimeout(function(){\r\n\t\t\tbody.removeChild(node);\r\n\t\t},2000)\r\n\t}, (time * 1000));\r\n}\r\nexport {throttle,getNewLayout5,getNewLayout4,findTypeFromId,findOpenContainerId,clone,showTips}\r\n\r\n ","import React, { Component } from 'react'\r\nimport './index.scss'\r\nimport * as Fn from '../funcTool'\r\ntype Props = {\r\n    deleteItem():void,\r\n    value:any,\r\n    saveEditorData(data:any):void,\r\n    containerId:number,\r\n    configData:any[],\r\n    storeData(isChecked:boolean, data:any):void,\r\n    isContainerState:boolean,\r\n    isContainer(isChecked:boolean,data:any):void,\r\n    setOpenContainerId():void\r\n    \r\n} \r\n// const initialState = {\r\n     \r\n// }\r\ninterface IState {\r\n    [id: number]: any;\r\n    containerId:number\r\n   \r\n}\r\n// type State =  typeof initialState  \r\nclass EditorTab extends Component<Props,   IState> {\r\n  state:IState  = {\r\n    containerId:0\r\n  }\r\n  static getDerivedStateFromProps (nextProps:Props, preState:IState){\r\n    if(preState[\"containerId\"] !==nextProps.containerId){\r\n      return {\r\n        [nextProps.containerId]: nextProps.value,\r\n        containerId:nextProps.containerId\r\n      }\r\n    }else {\r\n      return null\r\n    }\r\n  }\r\n  // UNSAFE_componentWillReceiveProps(props:Props) {\r\n  //   if (this.props.containerId !== props.containerId) {\r\n  //       this.setState({\r\n  //         [props.containerId]: props.value,\r\n  //       });\r\n  //   }\r\n  // }\r\n  itemEditor = (item:any, index:number) => {\r\n    let id = this.props.containerId\r\n    if (typeof item === 'string') {\r\n      return (\r\n        <div key={index} className=\"editor_box text\">\r\n          {item}\r\n        </div>\r\n      )\r\n    } else {\r\n      if (item.type === 'input') {\r\n        return (\r\n          <div key={index} className=\"editor_box input_box\">\r\n            <label>{item.text}</label>\r\n            <input\r\n              className=\"edit_input\"\r\n              onChange={e => {\r\n                let val = e.target.value\r\n                let editorData = Fn.clone(this.state[id])\r\n                editorData = { ...editorData, [item.field]: val }\r\n                this.setState({ [id]: editorData })\r\n                this.props.saveEditorData(editorData)\r\n              }}\r\n              value={this.state[id][item.field] || \"\"}\r\n              placeholder={item.text}\r\n            />\r\n          </div>\r\n        )\r\n      } else if (item.type === 'show_name') {\r\n        return (\r\n          <div key={index} className=\"editor_box\">\r\n            <label>组件名：</label>\r\n            <span>{item.text}</span>\r\n          </div>\r\n        )\r\n      } else if (item.type === 'select') {\r\n        return (\r\n          <div key={index} className=\"editor_box  input_box\">\r\n            <label>{item.text}</label>\r\n            <select\r\n              className=\"edit_input\"\r\n              value={this.state[id][item.field] || undefined}\r\n              placeholder={item.text}\r\n              onChange={(e:React.ChangeEvent<HTMLSelectElement>):void => {\r\n                let val = e.target.value\r\n                let editorData = Fn.clone(this.state[id])\r\n                editorData = { ...editorData, [item.field]: val }\r\n                this.setState({ [id]: editorData })\r\n                this.props.saveEditorData(editorData)\r\n              }}\r\n            >\r\n              {item.data.map((item:any) => {\r\n                return (\r\n                  <option key={item.key} value={item.key}>\r\n                    {item.value}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n          </div>\r\n        )\r\n      } else if (item.type === 'selectIcon') {\r\n        return (\r\n          <div key={index} className=\"editor_box  input_box\">\r\n            <label>{item.text}</label>\r\n            <select\r\n              className=\"edit_input\"\r\n              value={this.state[id][item.field]|| undefined}\r\n              placeholder={item.text}\r\n              onChange={(e:React.ChangeEvent<HTMLSelectElement>) => {\r\n                let val = e.target.value\r\n                let editorData = Fn.clone(this.state[id])\r\n                editorData = { ...editorData, [item.field]: val }\r\n                this.setState({ [id]: editorData })\r\n                this.props.saveEditorData(editorData)\r\n              }}\r\n            >\r\n              {item.data.map((item:any) => {\r\n                let src = `res/icon/${item.key}.png`\r\n                return (\r\n                  <option key={item.key} value={item.key}>\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                      <img\r\n                        style={{\r\n                          width: '20px',\r\n                          height: '20px',\r\n                          marginRight: '2px'\r\n                        }}\r\n                        src={src}\r\n                        alt=\"\"\r\n                      />\r\n                      {item.value}\r\n                    </div>\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n          </div>\r\n        )\r\n      } else if (item.type === 'switch') {\r\n        let checked\r\n        if (this.state[id]) {\r\n      \r\n          if (this.state[id][item.field]) {\r\n            checked = true\r\n          } else {\r\n            checked = false\r\n          }\r\n        } else {\r\n          checked = false\r\n        }\r\n\r\n        return (\r\n          <div key={index} className=\"editor_box\">\r\n            <span style={{ fontSize: '16px', color: '#999' }}>\r\n              {item.text}：\r\n            </span>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={checked}\r\n              onChange={e => {\r\n                let isContainerState = this.props.isContainerState\r\n                let checked = e.target.checked\r\n                // 当前容器是开启状态 && 点击checkbox又是开启 就是代表想开启同时开启两个容器 这个是不允许的\r\n                if(isContainerState ===true && checked===true)  {\r\n                  Fn.showTips(\"请确保之前容器状态已关闭\", 200, 2)\r\n                  this.props.setOpenContainerId()\r\n                  return\r\n                }\r\n                let editorData = Fn.clone(this.state[id])\r\n                this.setState({\r\n                  [id]:{ ...editorData, [item.field]: checked }\r\n                },()=>{\r\n                  this.props.storeData(checked, this.state[id])\r\n                })\r\n              }}\r\n            ></input>\r\n          </div>\r\n        )\r\n      } else {\r\n        return <div key={index} className=\"editor_box\"></div>\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"editor_wrapper\">\r\n          <div className=\"editor_name\">编辑栏</div>\r\n          \r\n        </div>\r\n        <div className=\"editor_content\">\r\n          <div className=\"editor_box \">\r\n            <button\r\n              className=\"edit_btn hvr-buzz-out\"\r\n              title=\"请先选中需要删除的组件\"\r\n              onClick={this.props.deleteItem}\r\n            >\r\n              删除组件\r\n            </button>\r\n          </div>\r\n          {this.props.configData.map((item, index) => {\r\n            return this.itemEditor(item, index)\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default EditorTab\r\n","import React from 'react'\nexport const MyContext = React.createContext({\n    \n});","import React, { Component } from \"react\";\r\nimport GridLayout, { WidthProvider } from \"react-grid-layout\";\r\nimport \"react-grid-layout/css/styles.css\";\r\nimport \"react-resizable/css/styles.css\";\r\nimport \"./index.scss\";\r\nimport { clickTypeConfig,dialogFnConfig } from '../../editor/config';\r\n\r\nconst ReactGridLayout = WidthProvider(GridLayout);\r\nclass MyContainer extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.height = document.body.clientHeight\r\n  }\r\n  static editorConfig = [\r\n    {\r\n      text:\"容器\",    \r\n      type:\"show_name\" // 组件名称\r\n    },\r\n    {\r\n      field: \"switch\",\r\n      text: \"是否开启容器状态\",\r\n      type: \"switch\"\r\n    },\r\n    {\r\n      field: \"title\",\r\n      text: \"输入标题\",\r\n      type: \"input\"\r\n    },\r\n    {\r\n      field: \"bacc\",\r\n      text: \"容器背景色\",\r\n      type: \"input\"\r\n    },\r\n    {\r\n      field: \"bdcolor\",\r\n      text: \"边框色\",\r\n      type: \"input\"\r\n    },\r\n    \"设置点击响应类型\",\r\n        {\r\n            field: \"click_type\",\r\n            text: \"响应类型\",\r\n            type:\"select\",\r\n            data: clickTypeConfig\r\n        },\r\n        {\r\n            field: \"dialog_type\",\r\n            text: \"弹框数据接口\",\r\n            type:\"select\",\r\n            data: dialogFnConfig\r\n        },\r\n        {\r\n            field:\"chartfn\",\r\n            text:\"地图交互方法\",    \r\n            type:\"selectChartFn\"\r\n        },\r\n  ];\r\n  click = ()=>{\r\n \r\n    let data = this.props.data || {};\r\n    let click_type = data.click_type\r\n    if(click_type===\"dialog\"){  // 判断点击类型来区分 弹出dialog还是和地图交互\r\n        this.props.changeDialogVisible(\"90%\",\"90%\")\r\n        return\r\n    }else if(click_type===\"map\"){\r\n        this.props.clickCesium(data[\"chartfn\"])\r\n    }\r\n  }\r\n  render() {\r\n    let border = this.props.data && (this.props.data[\"bdcolor\"] ||\"rgba(0,0,0,.3)\")\r\n    // let isPreview = this.props.isPreview\r\n    return (\r\n      <div className=\"container_wrapper\" style={{border:'1px solid '+ border,background:this.props.data && (this.props.data[\"bacc\"] ||\"transparent\")}}>\r\n        {this.props.data && this.props.data[\"title\"] ? (\r\n          <div className=\"container_title\" onClick={this.click}>{this.props.data[\"title\"]}</div>\r\n        ) : null}\r\n        <ReactGridLayout\r\n          className=\"layout\"\r\n          compactType={null}\r\n          preventCollision={true}\r\n          onLayoutChange={e => {\r\n            this.props.onLayoutChange(e);\r\n          }}\r\n          rowHeight={this.height / 62.46 }\r\n          cols={24}\r\n        >\r\n          {this.props.children}\r\n        </ReactGridLayout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyContainer;\r\n","export const iconConfig = [ // 图标配置\r\n    {key:\"\",value:\"无\"},\r\n    {key:\"icon_rg\",value:\"头像\"}, \r\n    {key:\"icon_wrj\",value:\"无人机\"}, \r\n    {key:\"icon_zs\",value:\"树木\"}, \r\n    {key:\"icon_bhg\",value:\"不合格\"},\r\n    {key:\"icon_hg\",value:\"合格\"}, \r\n    {key:\"研究\",value:\"研究\"}, \r\n    {key:\"实习\",value:\"实习\"}, \r\n    {key:\"参观\",value:\"参观\"}, \r\n    {key:\"建设\",value:\"建设\"}, \r\n    {key:\"教学\",value:\"教学\"}, \r\n    {key:\"科考\",value:\"科考\"}, \r\n    {key:\"红外相机\",value:\"红外相机\"}, \r\n    {key:\"地类\",value:\"地类\"}, \r\n    {key:\"防火\",value:\"防火\"}, \r\n    {key:\"护林\",value:\"护林\"}, \r\n    {key:\"护林员\",value:\"护林员\"}, \r\n    {key:\"林种\",value:\"林种\"}, \r\n    {key:\"起源\",value:\"起源\"}, \r\n    {key:\"摄像机\",value:\"摄像机\"}, \r\n    {key:\"生态因子\",value:\"生态因子\"}, \r\n    {key:\"树种\",value:\"树种\"}, \r\n    {key:\"土壤\",value:\"土壤\"}, \r\n    {key:\"植被\",value:\"植被\"}, \r\n    {key:\"dxm\",value:\"大熊猫\"}, \r\n    {key:\"jd\",value:\"金雕\"}, \r\n    {key:\"jsh\",value:\"金丝猴\"}, \r\n    {key:\"yunbao\",value:\"云豹\"}, \r\n]\r\nexport const bigIconConfig = [\r\n    {key:\"人文景观\",value:\"人文景观\"}, \r\n    {key:\"生态景观\",value:\"生态景观\"}, \r\n    {key:\"自然景观\",value:\"自然景观\"}, \r\n]\r\nexport const funConfig = [ // 调用方法的配置\r\n    {key:\"changeColor\", value:\"切换颜色\"}, \r\n    {key:\"changeNum\",value:\"改变数量\"}, \r\n    {key:\"clickCesium\",value:\"设置圆圈\"}, \r\n]\r\nexport let filterDefalutData ={\r\n    \"endtime\": \"\",\r\n    \"begintime\": \"\",\r\n}\r\nexport let clickContainerConfig =[\r\n    {key:\"\",value:\"无\"}, \r\n    {key:\"pop_type1\",value:\"弹出-类型1\"}, \r\n    {key:\"pop_type2\",value:\"弹出-类型2\"}, \r\n    // {key:\"地图交互\",value:\"map\"}, \r\n]\r\nexport let flexDirectionConfig =[ // 布局方向配置\r\n    {key:\"row\",value:\"水平方向\"}, \r\n    {key:\"column\",value:\"垂直方向\"}\r\n]\r\nexport let clickTypeConfig =[ // 点击组件响应类型\r\n    {key:\"map\",value:\"地图交互\"}, \r\n    {key:\"dialog\",value:\"弹出框\"}\r\n]\r\nexport let dialogFnConfig =[ // 弹框数据接口 临时的 应该为后台返回的数据\r\n    {key:\"plant\",value:\"植物多样性\"},   \r\n    {key:\"animal\",value:\"动物多样性\"},\r\n    {key:\"msg\",value:\"信息\"},\r\n    {key:\"education\",value:\"社区教育\"},\r\n    {key:\"pie\",value:\"饼图\"},\r\n]","import React, { Component,PureComponent } from 'react'\r\nimport { MyContext } from '../../context'\r\nexport default class MyTest extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      test:[{a:2}]\r\n    }\r\n    this.filter = {}\r\n  }\r\n  static editorConfig = [\r\n    {\r\n      text: 'test',\r\n      type: 'show_name' // 组件名称\r\n    }\r\n  ]\r\n  componentDidMount() {\r\n    this.setState({\r\n      test:[{a:Math.random()}]\r\n    })\r\n     \r\n  }\r\n   \r\ntestFn = ()=>{\r\n  console.log('===@@@@@@@>test1',);\r\n  this.setState({\r\n    test:[{a:2}]\r\n  })\r\n}\r\nshouldComponentUpdate(nextProps, nextState ){\r\n  console.log('nextState===>',nextState);\r\n  console.log('this.state===>',this.state);\r\n  // if(JSON.stringify(nextState.test) !== JSON.stringify(this.state.test)) return true\r\n  return false\r\n}\r\n   \r\n  componentDidUpdate(prevProps, prevState, snapshot) {  \r\n      console.log(':componentDidUpdate:');\r\n\r\n      \r\n      let value = this.context;\r\n      let filter  = value.data.filter\r\n      if(JSON.stringify(this.filter) === JSON.stringify(filter)) {\r\n        return\r\n      }else {\r\n        this.filter = filter\r\n        this.testFn()\r\n\r\n      }\r\n     \r\n  }\r\n   \r\n  render() {\r\n    let theme = this.context\r\n    console.log('render1===>' );\r\n\r\n    return (\r\n      <div style={{ width: '100%', height: '100%', background: '#666' }} >\r\n        <div onClick={()=>{\r\n        theme.test(30)\r\n      }}>按钮</div>\r\n      <div>{JSON.stringify(theme.data)}</div>\r\n      {\r\n          this.state.test.map(item=><div>{item.a}</div>)\r\n        }\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\nMyTest.contextType = MyContext\r\n","import React, { Component,PureComponent } from 'react'\r\nimport { MyContext } from '../../context'\r\nexport default class MyTest2 extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      test:[{a:1}]\r\n    }\r\n    this.filter = {}\r\n  }\r\n  static editorConfig = [\r\n    {\r\n      text: 'test',\r\n      type: 'show_name' // 组件名称\r\n    }\r\n  ]\r\n  \r\n  render() {\r\n    \r\n    console.log('render2===>' );\r\n\r\n    return (\r\n      <div style={{ width: '100%', height: '100%', background: 'red',color:\"#fff\" }} >\r\n        这是组件test2\r\n      </div>\r\n    )\r\n  }\r\n}\r\n \r\n","import React, { Component } from 'react'\r\nimport GridLayout, { WidthProvider, Layout } from 'react-grid-layout'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport NavLeft from './navLeft/index'\r\nimport Editor from './editor/index'\r\nimport 'react-grid-layout/css/styles.css'\r\nimport 'react-resizable/css/styles.css'\r\nimport './index.scss'\r\nimport { ComlistOne } from './type'\r\nimport * as Fn from './funcTool'\r\nimport axios from 'axios'\r\nimport { MyContext } from './context.js'\r\nimport MyContainer from './component/mycontainer'\r\nimport MyTest from './component/mytest'\r\nimport MyTest2 from './component/mytest2'\r\ninterface NewLayout extends Layout {\r\n  id: number\r\n  value: string\r\n  type: string\r\n  layout: NewLayout[]\r\n  editorData: object\r\n}\r\ninterface State {\r\n  layout: NewLayout[]\r\n  containerId: number\r\n  isContainer: boolean\r\n  openContainerId: number\r\n  containerType: string\r\n  editorVisible: boolean\r\n  navVisible: boolean\r\n  filter: object\r\n}\r\ninterface AllComponent {\r\n  [key: string]: any\r\n  container: typeof MyContainer\r\n  test: typeof MyTest\r\n  test2: typeof MyTest2\r\n}\r\nconst ReactGridLayout = WidthProvider(GridLayout)\r\nconst allComponent: AllComponent = {\r\n  container: MyContainer,\r\n  test: MyTest,\r\n  test2: MyTest2\r\n}\r\n/**\r\n * 初始位置x\r\n */\r\nconst InitX: number = 15\r\n/**\r\n * 初始位置y\r\n */\r\nconst InitY: number = 15\r\nexport default class RGL extends Component<{ isDisplay: boolean }, State> {\r\n  editor: [] = []\r\n  id: number = 1 //  每个组件都有一个唯一的id\r\n  height: number = document.body.clientHeight\r\n  state: State = {\r\n    containerId: 0,\r\n    isContainer: false,\r\n    openContainerId: -1,\r\n    containerType: '',\r\n    layout: [],\r\n    editorVisible: true,\r\n    navVisible: true,\r\n    filter: {}\r\n  }\r\n  componentDidUpdate() {\r\n    // 实现开启多个容器警示效果功能\r\n    if (this.state.openContainerId === this.state.containerId) {\r\n      this.setState({\r\n        openContainerId: -1\r\n      })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.height = document.body.clientHeight\r\n    if (this.props.isDisplay) {\r\n      // 如果是演示页面的时候执行这个方法\r\n      this.displayInit()\r\n      return\r\n    }\r\n    this.needEditInit() // 如果是编辑状态的时候执行这个方法\r\n  }\r\n  /**\r\n   * 编辑状态 获取初始数据\r\n   */\r\n  needEditInit = () => {\r\n    axios({\r\n      url: 'ly/style/getStyle.ht',\r\n      method: 'POST',\r\n      baseURL: 'http://47.108.28.1:8085/',\r\n      timeout: 30000,\r\n      data: {\r\n        id: 'test2'\r\n      }\r\n    })\r\n      .then(response => {\r\n        let res = response.data\r\n        // 返回的数据格式\r\n        // {\r\n        //   id: \"test2\"\r\n        //   style: \"{\"id\":10,\"isContainer\":true,\"layout\":[{\"id\":8,\"x\r\n        // }\r\n        let styleData = res.data.style\r\n        styleData = JSON.parse(styleData)\r\n        if (styleData) {\r\n          this.id = styleData.id // 当前的id 避免编辑的时候新增组件和之前组件id重合\r\n          this.setState({\r\n            // showNavAndEditor: true,\r\n            layout: styleData.layout,\r\n            isContainer: styleData.isContainer\r\n          })\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          // showNavAndEditor: true\r\n        })\r\n      })\r\n  }\r\n  /**\r\n   * 编辑好了 作为页面组件时 获取初始数据\r\n   */\r\n  displayInit = () => {\r\n    axios({\r\n      url: 'ly/style/getStyle.ht',\r\n      method: 'POST',\r\n      baseURL: 'http://47.108.28.1:8085/',\r\n      timeout: 30000,\r\n      data: {\r\n        id: 'test2'\r\n      }\r\n    }).then(res => {\r\n      let styleData = res.data.style\r\n      styleData = JSON.parse(styleData)\r\n      if (styleData) {\r\n        this.setState({ layout: styleData.layout })\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 改变布局（drag和resize）之后需要保存新的布局数据,其他回调函数不行\r\n   */\r\n  onLayoutChange = (e: GridLayout.Layout[]) => {\r\n    let layout: NewLayout[] = Fn.clone(this.state.layout)\r\n    e.forEach(item => {\r\n      layout.forEach(item2 => {\r\n        if (item.i === String(item2.id)) {\r\n          item2.x = item.x\r\n          item2.y = item.y\r\n          item2.w = item.w\r\n          item2.h = item.h\r\n        }\r\n        if (item2.layout && item2.layout.length > 0) {\r\n          item2.layout.forEach(item3 => {\r\n            if (item.i === String(item3.id)) {\r\n              item3.x = item.x\r\n              item3.y = item.y\r\n              item3.w = item.w\r\n              item3.h = item.h\r\n            }\r\n          })\r\n        }\r\n      })\r\n    })\r\n    this.setState({ layout })\r\n  }\r\n  /**\r\n   * 点击模块的时候设置数据\r\n   */\r\n  setData = (item: any) => {\r\n    this.setState({\r\n      containerId: item.id,\r\n      containerType: item.type\r\n    })\r\n  }\r\n  /**\r\n   * 点击模块的时候 需要设置更新数据\r\n   */\r\n  componentClick = (e: React.MouseEvent, component: any, item: NewLayout) => {\r\n    e.stopPropagation()\r\n    let containerId = this.state.containerId\r\n    if (containerId === item.id) return // 如果两次点击的是同一个组件 return\r\n    this.editor = component.editorConfig // 保存 更新 编辑器的内容\r\n    this.setData(item)\r\n  }\r\n  getComponent = (item: NewLayout, index: number) => {\r\n    let theType: string = item.type\r\n    if (allComponent.hasOwnProperty(theType)) {\r\n      let Component = allComponent[theType]\r\n      if (theType === 'container') {\r\n        return (\r\n          <div\r\n            data-grid={item}\r\n            key={item.id}\r\n            onClick={(e: React.MouseEvent) =>\r\n              this.componentClick(e, Component, item)\r\n            }\r\n            className={`component_wrapper ${\r\n              this.state.openContainerId === item.id ? 'blink-1' : ''\r\n            }`}\r\n          >\r\n            <Component\r\n              data={item.editorData}\r\n              onLayoutChange={this.onLayoutChange}\r\n            >\r\n              {item.layout.map((item2, index) => {\r\n                return this.getComponent(item2, index)\r\n              })}\r\n            </Component>\r\n          </div>\r\n        )\r\n      }\r\n      return (\r\n        <div\r\n          key={item.id}\r\n          onClick={(e: React.MouseEvent) =>\r\n            this.componentClick(e, Component, item)\r\n          }\r\n          data-grid={item}\r\n          className=\"component_wrapper\"\r\n        >\r\n          <Component data={item.editorData} />\r\n        </div>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  changeLayout = (newval: ComlistOne): void => {\r\n    let layout: NewLayout[] = Fn.clone(this.state.layout)\r\n    let containerId = this.state.containerId\r\n    let isContainer = this.state.isContainer\r\n    let theType = Fn.findTypeFromId(layout, containerId, '') // 当前点击组件Id对应的type\r\n    if (isContainer) {\r\n      // 当设置了容器的状态为开启的时候\r\n      if (newval.type === 'container' && theType === 'container') {\r\n        // 添加的组件是container 点击的组件是container\r\n        this.setOpenContainerId()\r\n        Fn.showTips('不能嵌套添加容器', 200, 2)\r\n        return\r\n      } else if (\r\n        newval.type === 'container' &&\r\n        theType !== 'container' &&\r\n        theType !== ''\r\n      ) {\r\n        // 添加的组件是container 点击的组件不是container 点击的不是空白处\r\n        Fn.showTips('请先选中状态为开启的容器1', 200, 2)\r\n        return\r\n      } else if (newval.type === 'container' && theType === '') {\r\n        // 添加的组件是container 点击了空白处\r\n        layout.push({\r\n          i: String(this.id),\r\n          id: this.id,\r\n          x: InitX,\r\n          y: InitY,\r\n          w: 1,\r\n          h: 1,\r\n          type: newval.type,\r\n          static: false,\r\n          value: newval.value,\r\n          layout: [],\r\n          editorData: {}\r\n        })\r\n        this.id++\r\n        this.setState({\r\n          layout: layout\r\n        })\r\n        return\r\n      }\r\n      let flag = false // 实现一个标记 为了显示错误操作的提示\r\n      layout.forEach(item => {\r\n        if (item.id === containerId && item.static === true) {\r\n          flag = true\r\n          item.layout.push({\r\n            i: String(this.id),\r\n            id: this.id,\r\n            x: 0,\r\n            y: item.layout.length * 2,\r\n            w: 1,\r\n            h: 1,\r\n            type: newval.type,\r\n            static: false,\r\n            value: newval.value,\r\n            layout: [],\r\n            editorData: {}\r\n          })\r\n        }\r\n      })\r\n      if (!flag) {\r\n        this.setOpenContainerId()\r\n        Fn.showTips('请先选中状态为开启的容器2', 200, 2)\r\n        return\r\n      }\r\n    } else {\r\n      layout.push({\r\n        i: String(this.id),\r\n        id: this.id,\r\n        x: InitX,\r\n        y: InitY,\r\n        w: 1,\r\n        h: 1,\r\n        type: newval.type,\r\n        static: false,\r\n        value: newval.value,\r\n        layout: [],\r\n        editorData: {}\r\n      })\r\n    }\r\n    this.id++\r\n\r\n    this.setState({\r\n      layout: layout\r\n    })\r\n  }\r\n  /**\r\n   * 保存配置信息\r\n   */\r\n  saveData = (bool: boolean) => {\r\n    let layout = this.state.layout\r\n    if (bool) {\r\n      layout.forEach(item => {\r\n        item.static = true\r\n        if (item.layout && item.layout.length > 0) {\r\n          item.layout.forEach(item2 => {\r\n            item2.static = true\r\n          })\r\n        }\r\n      })\r\n    }\r\n    let obj = {\r\n      layout: layout,\r\n      id: this.id,\r\n      isContainer: this.state.isContainer\r\n    }\r\n    axios({\r\n      url: 'ly/style/saveStyle.ht',\r\n      method: 'POST',\r\n      baseURL: 'http://47.108.28.1:8085/',\r\n      timeout: 6000,\r\n      data: {\r\n        id: 'test2',\r\n        style: obj\r\n      }\r\n    }).then((res: any) => {\r\n      let data = res.data\r\n      if (data.code === '0') {\r\n        Fn.showTips('保存成功', 200, 2)\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * 删除组件\r\n   */\r\n  deleteItem = (): void => {\r\n    let { containerId, isContainer } = this.state\r\n    let layout: NewLayout[] = Fn.clone(this.state.layout)\r\n    if (containerId === 0) return // 初始化 未点击组件的时候  就return\r\n    layout.forEach((item, index) => {\r\n      if (item.id === containerId) {\r\n        if (item.static === true && isContainer) {\r\n          // 当删除的这个是容器 是可填充状态的时候需要设置一下避免出错\r\n          // this.state.isContainer = false\r\n          this.setState({\r\n            isContainer: false\r\n          })\r\n        }\r\n        layout.splice(index, 1)\r\n        return\r\n      }\r\n      if (item.layout && item.layout.length > 0) {\r\n        item.layout.forEach((item2, index2) => {\r\n          if (item2.id === containerId) {\r\n            item.layout.splice(index2, 1)\r\n            return\r\n          }\r\n        })\r\n      }\r\n    })\r\n    this.editor = []\r\n    this.setState({ layout: layout })\r\n  }\r\n  /**\r\n   * 获取当前点击模块对应的editor的数据 实现回填 初始值\r\n   */\r\n  editorValue = (): object => {\r\n    let containerId = this.state.containerId\r\n    let layout: NewLayout[] = Fn.clone(this.state.layout)\r\n    let data: object = {}\r\n    layout.forEach(item => {\r\n      if (item.id === containerId) {\r\n        data = item.editorData\r\n      }\r\n      if (item.id !== containerId && item.layout) {\r\n        item.layout.forEach(item2 => {\r\n          if (item2.id === containerId) {\r\n            data = item2.editorData\r\n          }\r\n        })\r\n      }\r\n    })\r\n    return data\r\n  }\r\n  setOpenContainerId = (): void => {\r\n    // 找到容器状态为开启的那个容器的Id\r\n    let id: number = Fn.findOpenContainerId(this.state.layout) || -1\r\n    if (id && typeof id === 'number') {\r\n      this.setState({\r\n        openContainerId: id\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * 把编辑器的data保存到layout里面\r\n   */\r\n  saveEditorData = (data: any): void => {\r\n    let containerId = this.state.containerId\r\n    let layout = this.state.layout\r\n    let newdata = Fn.getNewLayout5(layout, containerId, data)\r\n    this.setState({ layout: newdata })\r\n  }\r\n  /**\r\n   *  是否是容器 切换函数 并保存editorData\r\n   */\r\n  isContainer = (isChecked: boolean, data: any) => {\r\n    let containerId = this.state.containerId\r\n    if (containerId == null) {\r\n      return\r\n    }\r\n    let layout: NewLayout[] = Fn.clone(this.state.layout)\r\n\r\n    let newLayout = Fn.getNewLayout4(layout, containerId, isChecked)\r\n\r\n    this.setState(\r\n      {\r\n        isContainer: isChecked,\r\n        layout: newLayout\r\n      },\r\n      () => {\r\n        let newdata = Fn.getNewLayout5(newLayout, containerId, data)\r\n        this.setState({ layout: newdata })\r\n      }\r\n    )\r\n  }\r\n  /**\r\n   * 点击容器的切换容器状态按钮 确保只能存在一个容器状态为开启\r\n   */\r\n  storeData = (isChecked: boolean, data: any) => {\r\n    let isContainer = this.state.isContainer\r\n\r\n    if (isContainer && isChecked) {\r\n      Fn.showTips('请确保之前容器状态已关闭', 200, 2)\r\n      return\r\n    }\r\n    this.isContainer(isChecked, data)\r\n  }\r\n  isShowNav = () => {\r\n    this.setState({\r\n      navVisible: !this.state.navVisible\r\n    })\r\n  }\r\n  isShowEditor = () => {\r\n    this.setState({\r\n      editorVisible: !this.state.editorVisible\r\n    })\r\n  }\r\n  test = (data: any) => {\r\n    this.setState({\r\n      filter: data\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <MyContext.Provider\r\n        value={{\r\n          data: {\r\n            filter: this.state.filter\r\n          },\r\n          test: this.test\r\n        }}\r\n      >\r\n        <div className=\"wrapper_container\">\r\n          <div className=\"tool\">\r\n            <span className=\"tool_btn\" onClick={this.isShowNav}>\r\n              导航\r\n            </span>\r\n            <span className=\"tool_btn\" onClick={this.isShowEditor}>\r\n              编辑栏\r\n            </span>\r\n            <span className=\"tool_btn\" onClick={() => this.saveData(true)}>\r\n              保存\r\n            </span>\r\n            <span className=\"tool_btn\" onClick={() => this.saveData(false)}>\r\n              存草稿\r\n            </span>\r\n          </div>\r\n          {/* 左边导航 */}\r\n\r\n          <CSSTransition\r\n            in={this.state.navVisible}\r\n            timeout={1000}\r\n            // <!-- classNames是钩子名，为后面的class名前缀 -->\r\n            classNames=\"nav_visible\"\r\n            // <!-- unmountOnExit表示元素隐藏则相应的DOM被移除 -->\r\n            unmountOnExit\r\n            // <!-- appear设为true表示进场动画,CSS中有对应类名 -->\r\n            appear={true}\r\n            // <!--以下为动画钩子函数, 与CSS中相对应-->\r\n          >\r\n            <div className={'navLeft_container'}>\r\n              <NavLeft onClick={this.changeLayout} />\r\n            </div>\r\n          </CSSTransition>\r\n\r\n          {/* 中间部分 */}\r\n          <div className=\"main_container\">\r\n            <div className=\"\">\r\n              {/* 背景 */}\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  zIndex: 0,\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  background: '#ccc'\r\n                }}\r\n              ></div>\r\n              <ReactGridLayout\r\n                margin={[0, 0]}\r\n                onLayoutChange={(e: GridLayout.Layout[]) => {\r\n                  this.onLayoutChange(e)\r\n                }}\r\n                compactType={null}\r\n                className=\"layout1\"\r\n                preventCollision={true}\r\n                layout={this.state.layout} // 虽然使用了data-grid 这个还是不能删\r\n                cols={96} // 可以把页面分为多少个断点 水平方向\r\n                rowHeight={this.height / 62.46} // 垂直方向 单位grid的高度   //其实就是15 this.height / 62.46\r\n              >\r\n                {this.state.layout.map((item, index) => {\r\n                  return this.getComponent(item, index)\r\n                })}\r\n              </ReactGridLayout>\r\n            </div>\r\n          </div>\r\n          {/* 右边编辑部分 */}\r\n          <CSSTransition\r\n            in={this.state.editorVisible}\r\n            timeout={1000}\r\n            // <!-- classNames是钩子名，为后面的class名前缀 -->\r\n            classNames=\"editor_visible\"\r\n            // <!-- unmountOnExit表示元素隐藏则相应的DOM被移除 -->\r\n            unmountOnExit\r\n            // <!-- appear设为true表示进场动画,CSS中有对应类名 -->\r\n            appear={true}\r\n            // <!--以下为动画钩子函数, 与CSS中相对应-->\r\n          >\r\n            <div className=\"editor_container\">\r\n              <Editor\r\n                deleteItem={this.deleteItem}\r\n                value={this.editorValue()} // 当前模块配置的数据\r\n                saveEditorData={this.saveEditorData}\r\n                containerId={this.state.containerId} // 当前点击容器的id\r\n                configData={this.editor} // 初始化配置数据 生成组件\r\n                storeData={this.storeData}\r\n                isContainerState={this.state.isContainer}\r\n                isContainer={this.isContainer} //函数\r\n                setOpenContainerId={this.setOpenContainerId} // 设置已经是开启状态的容器 产生闪烁的功能\r\n              />\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n      </MyContext.Provider>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport RGL from './page/rgl/index'\n \nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <RGL isDisplay={false} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nif (module.hot) {\n    module.hot.accept();\n  }\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}